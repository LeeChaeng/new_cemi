{"version":3,"sources":["store/modules/calendar.ts","components/Calendar.tsx","store/modules/getDays.ts","routes/Home.tsx","App.tsx","store/modules/index.ts","store/index.ts","index.tsx"],"names":["PREV","TODAY","NEXT","CHANGE","initialState","selectedDate","Date","DAYS","Title","styled","div","Button","Container","Weekend","Calendar","useSelector","state","calendar","dispatch","useDispatch","days","today","result","start_date","getDay","getFullYear","getMonth","prev_allDays","getDaysInMonth","sub","months","i","prev","date","temp","id","getTime","push","next_month_count","length","next","add","getDays","onDateClick","event","target","console","log","current","document","getElementById","toString","className","type","changeDate","parseInt","select","format","onClick","map","day","idx","item","getDate","Home","App","rootReducer","combineReducers","action","devTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","ReactDOM","render"],"mappings":"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","file":"static/js/main.861910ab.chunk.js","sourcesContent":["import { add, sub } from \"date-fns\";\n\nconst PREV = \"calendar/PREV\" as const;\nconst TODAY = \"calendar/TODAY\" as const;\nconst NEXT = \"calendar/NEXT\" as const;\nconst CHANGE = \"calendar/CHANGE\" as const;\n\nexport const prevMonth = () => ({ type: PREV });\nexport const thisMonth = () => ({ type: TODAY });\nexport const nextMonth = () => ({ type: NEXT });\nexport const changeDate = (id: number) => ({ type: CHANGE, id: id });\n\ntype CalendarAction =\n  | ReturnType<typeof prevMonth>\n  | ReturnType<typeof thisMonth>\n  | ReturnType<typeof nextMonth>\n  | ReturnType<typeof changeDate>;\n\nconst initialState = {\n  selectedDate: new Date(),\n};\n\nexport const calendar = (state = initialState, action: CalendarAction) => {\n  switch (action.type) {\n    case PREV:\n      console.log(\"action prev\");\n      return { selectedDate: sub(state.selectedDate, { months: 1 }) };\n    case TODAY:\n      console.log(\"today\");\n      return { selectedDate: new Date() };\n    case NEXT:\n      console.log(\"action next\");\n      return { selectedDate: add(state.selectedDate, { months: 1 }) };\n    case CHANGE:\n      console.log(\"change state\");\n      return { selectedDate: new Date(action.id) };\n    default:\n      return state;\n  }\n};\n","import format from \"date-fns/format\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { RootState } from \"../store/modules\";\nimport {\n  nextMonth,\n  thisMonth,\n  prevMonth,\n  changeDate,\n} from \"../store/modules/calendar\";\nimport { getDays } from \"../store/modules/getDays\";\n\nconst DAYS = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\nconst Calendar = () => {\n  const selectedDate = useSelector(\n    (state: RootState) => state.calendar.selectedDate\n  );\n  const dispatch = useDispatch();\n  const goPrevMonth = () => {\n    dispatch(prevMonth());\n  };\n  const goToday = () => {\n    dispatch(thisMonth());\n  };\n  const goNextMonth = () => {\n    dispatch(nextMonth());\n  };\n  const days: Array<any> = getDays(selectedDate);\n\n  const onDateClick = (event: any) => {\n    let {\n      target: { id },\n    } = event;\n    console.log(id);\n    let current = document.getElementById(selectedDate.getTime().toString());\n    if (current) {\n      current.className = \"item\";\n    }\n    dispatch(changeDate(parseInt(id)));\n    let select = document.getElementById(id);\n    if (select) {\n      select.className = \"item select\";\n    }\n  };\n\n  return (\n    <>\n      <Title>\n        <div className=\"title\">{format(selectedDate, \"MMMM, yyyy\")}</div>\n        <Button>\n          <button onClick={goPrevMonth}>{\"<\"}</button>\n          <button onClick={goToday}>{\"today\"}</button>\n          <button onClick={goNextMonth}>{\">\"}</button>\n        </Button>\n      </Title>\n      <Weekend>\n        {DAYS.map((day, idx) => (\n          <div key={idx}>{day}</div>\n        ))}\n      </Weekend>\n      <Container>\n        {days.map((item) => (\n          <div\n            className=\"item\"\n            key={item.id}\n            id={item.id}\n            onClick={onDateClick}\n          >\n            {item.date.getDate()}\n          </div>\n        ))}\n      </Container>\n    </>\n  );\n};\n\nconst Title = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  text-align: left;\n  padding-left: 20px;\n  padding-bottom: 30px;\n  /* border: solid; */\n  & > .title {\n    font-size: 23px;\n    padding-bottom: 15px;\n    font-family: \"Bold\";\n    color: #f2702f;\n  }\n`;\nconst Button = styled.div`\n  button {\n    border-radius: 50px;\n    border: none;\n    margin-right: 5px;\n  }\n`;\n\nconst Container = styled.div`\n  display: grid;\n  height: 500px;\n  grid-template-columns: repeat(7, 1fr);\n  grid-auto-rows: minmax(100px, auto);\n  border-left: solid 1px #f0f1f1;\n  border-bottom: solid 2px #f0f1f1;\n  border-right: solid 1px #f0f1f1;\n  & > .item {\n    border: solid 1px #f0f1f1;\n    padding-top: 5px;\n  }\n  & > .select {\n    color: #f2702f;\n  }\n`;\n\nconst Weekend = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  color: #5e647b;\n  height: 40px;\n  & > div {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  border: solid 2px #f0f1f1;\n  border-bottom: solid 1px #f0f1f1;\n`;\n\nexport default Calendar;\n","import { add, getDay, getDaysInMonth, sub } from \"date-fns\";\n\nexport const getDays = (today: Date) => {\n  let result: Array<Object> = [];\n\n  const start_date = getDay(new Date(today.getFullYear(), today.getMonth(), 1));\n  let prev_allDays = getDaysInMonth(sub(today, { months: 1 })) - start_date + 1; //화면에 보여줄 저번달의 첫날\n\n  for (let i = 0; i < start_date; i++) {\n    let prev = sub(today, { months: 1 });\n    let date = new Date(prev.getFullYear(), prev.getMonth(), prev_allDays);\n\n    let temp = {\n      id: date.getTime(),\n      date,\n    };\n    result.push(temp);\n    prev_allDays++;\n  }\n\n  for (let i = 1; i <= getDaysInMonth(today); i++) {\n    let date = new Date(today.getFullYear(), today.getMonth(), i);\n    let temp = {\n      id: date.getTime(),\n      date,\n    };\n    result.push(temp);\n  }\n\n  let next_month_count = 35 - result.length;\n  for (let i = 1; i <= next_month_count; i++) {\n    let next = add(today, { months: 1 });\n    let date = new Date(next.getFullYear(), next.getMonth(), i);\n    let temp = {\n      id: date.getTime(),\n      date,\n    };\n    result.push(temp);\n  }\n\n  if (result.length > 35) {\n    next_month_count = 42 - result.length;\n    for (let i = 1; i <= next_month_count; i++) {\n      let next = add(today, { months: 1 });\n      let date = new Date(next.getFullYear(), next.getMonth(), i);\n      let temp = {\n        id: date.getTime(),\n        date,\n      };\n      result.push(temp);\n    }\n  }\n\n  return result;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Calendar from \"../components/Calendar\";\n\nconst Home = () => {\n  return (\n    <Container>\n      <Calendar />\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  /* background-color: green; */\n  width: 1300px;\n  height: 700px;\n  margin: 0 auto;\n  margin-top: 100px;\n`;\nexport default Home;\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./routes/Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { calendar } from \"./calendar\";\n\nconst rootReducer = combineReducers({\n  calendar,\n});\n\nexport default rootReducer;\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { createStore } from \"@reduxjs/toolkit\";\nimport rootReducer from \"./modules\";\n\n// **** 리덕스 개발자도구 적용\nconst devTools =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__();\n\nconst store = createStore(rootReducer, devTools);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}