{"version":3,"sources":["store/modules/calendar.ts","components/Calendar.tsx","static/getDays.ts","store/modules/modal.ts","static/setLocalStorage.ts","static/getTodos.ts","store/modules/todo.ts","components/Modal.tsx","components/Todo.tsx","components/TodoList.tsx","routes/Home.tsx","App.tsx","store/modules/index.ts","store/index.ts","index.tsx"],"names":["PREV","TODAY","NEXT","CHANGE","initialState","selectedDate","Date","visibleDate","DAYS","Box","styled","div","Title","Button","Container","Day","props","selected","Color","color","Weekend","Calendar","useSelector","state","calendar","todoList","todo","dispatch","useDispatch","days","today","result","start_date","getDay","getFullYear","getMonth","prev_allDays","getDaysInMonth","sub","months","i","prev","date","temp","id","getTime","push","next_month_count","length","next","add","getDays","onDateClick","event","currentTarget","type","changeDate","parseInt","className","format","onClick","map","day","idx","item","toString","isSameDay","getDate","find","done","dateTime","ONOFF","switchModal","addModalOn","addLocalStorage","text","deadline","todoStorage","localStorage","getItem","setItem","JSON","stringify","current","parse","toggleChange","finalValue","value","deleteLocalStorage","filter","getTodos","ADDTODO","DELTODO","TOGGLETODO","HOURS","Overlay","Content","DeadLine","Submit","button","Modal","useState","deadLine","setDeadLine","inputValue","setInputValue","deadLineValue","setDeadLineValue","showModal","placeholder","onChange","target","hour","span","Todo","todoToggle","toggleTodo","icon","faTrash","size","delTodo","WEEKS","Info","TodoList","todoState","getWeekOfMonth","Home","modal","App","rootReducer","combineReducers","action","uuidv4","concat","devTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c43f53ac.chunk.js","sourcesContent":["import { add, sub } from \"date-fns\";\n\nconst PREV = \"calendar/PREV\" as const;\nconst TODAY = \"calendar/TODAY\" as const;\nconst NEXT = \"calendar/NEXT\" as const;\nconst CHANGE = \"calendar/CHANGE\" as const;\n\nexport const prevMonth = () => ({ type: PREV });\nexport const thisMonth = () => ({ type: TODAY });\nexport const nextMonth = () => ({ type: NEXT });\nexport const changeDate = (id: number) => ({ type: CHANGE, id: id });\n\ntype CalendarAction =\n  | ReturnType<typeof prevMonth>\n  | ReturnType<typeof thisMonth>\n  | ReturnType<typeof nextMonth>\n  | ReturnType<typeof changeDate>;\n\nconst initialState = {\n  selectedDate: new Date(),\n  visibleDate: new Date(),\n};\n\nexport const calendar = (state = initialState, action: CalendarAction) => {\n  switch (action.type) {\n    case PREV:\n      return { ...state, visibleDate: sub(state.visibleDate, { months: 1 }) };\n    case TODAY:\n      return { visibleDate: new Date(), selectedDate: new Date() };\n    case NEXT:\n      return { ...state, visibleDate: add(state.visibleDate, { months: 1 }) };\n    case CHANGE:\n      return {\n        visibleDate: new Date(action.id),\n        selectedDate: new Date(action.id),\n      };\n    default:\n      return state;\n  }\n};\n","import { isSameDay } from \"date-fns\";\nimport format from \"date-fns/format\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { RootState } from \"../store/modules\";\nimport {\n  nextMonth,\n  thisMonth,\n  prevMonth,\n  changeDate,\n} from \"../store/modules/calendar\";\nimport { getDays } from \"../static/getDays\";\nimport { TodoType } from \"../static/getTodos\";\n\nconst DAYS = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\nconst Calendar = () => {\n  const selectedDate = useSelector(\n    (state: RootState) => state.calendar.selectedDate\n  );\n  const visibleDate = useSelector(\n    (state: RootState) => state.calendar.visibleDate\n  );\n  const todoList = useSelector((state: RootState) => state.todo);\n\n  const dispatch = useDispatch();\n  const goPrevMonth = () => {\n    dispatch(prevMonth());\n  };\n  const goToday = () => {\n    dispatch(thisMonth());\n  };\n  const goNextMonth = () => {\n    dispatch(nextMonth());\n  };\n\n  const days = getDays(visibleDate);\n\n  const onDateClick = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    const {\n      currentTarget: { id },\n    } = event;\n    dispatch(changeDate(parseInt(id)));\n  };\n\n  return (\n    <Box>\n      <Title>\n        <div className=\"title\">\n          <span>{format(visibleDate, \"yyyy\")}</span>\n          <span className=\"title__month\">{format(visibleDate, \"MMMM\")}</span>\n        </div>\n        <Button>\n          <button onClick={goPrevMonth}>{\"<\"}</button>\n          <button onClick={goToday}>{\"today\"}</button>\n          <button onClick={goNextMonth}>{\">\"}</button>\n        </Button>\n      </Title>\n      <Weekend>\n        {DAYS.map((day, idx) => (\n          <div key={idx}>{day}</div>\n        ))}\n      </Weekend>\n      <div>\n        <Container>\n          {days.map((item) => (\n            <Day\n              key={item.id}\n              id={item.id.toString()}\n              onClick={onDateClick}\n              selected={isSameDay(selectedDate, item.date)}\n            >\n              {item.date.getDate()}\n              <div className=\"color_container\">\n                {todoList.find(\n                  (todo: TodoType) =>\n                    !todo.done &&\n                    isSameDay(new Date(todo.dateTime), new Date(item.id))\n                ) ? (\n                  <Color color=\"#007965\" />\n                ) : (\n                  \"\"\n                )}\n                {todoList.find(\n                  (todo: TodoType) =>\n                    todo.done &&\n                    isSameDay(new Date(todo.dateTime), new Date(item.id))\n                ) ? (\n                  <Color color=\"#00AF91\" />\n                ) : (\n                  \"\"\n                )}\n              </div>\n            </Day>\n          ))}\n        </Container>\n      </div>\n    </Box>\n  );\n};\n\nconst Box = styled.div`\n  flex: 3;\n  text-align: center;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  text-align: left;\n  padding: 32px;\n  & > .title {\n    font-size: 30px;\n    font-family: \"SCDream_bold\";\n    color: #3e4496;\n    & > .title__month {\n      font-size: 40px;\n      font-family: \"SCDream_bold\";\n      margin-left: 10px;\n    }\n  }\n`;\nconst Button = styled.div`\n  button {\n    border-radius: 50px;\n    border: none;\n    margin-right: 5px;\n  }\n`;\n\nconst Container = styled.div`\n  display: grid;\n  height: 600px;\n  grid-template-columns: repeat(7, 1fr);\n  grid-auto-rows: minmax(80px, auto);\n`;\n\nconst Day = styled.div<{ selected: boolean }>`\n  border: solid 1px #f0f1f1;\n  padding-top: 5px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  &:nth-child(7n) {\n    border-right: none;\n  }\n  &:nth-last-child(n) {\n    border-bottom: none;\n    border-left: none;\n  }\n\n  color: ${(props) => props.selected && \"#f2702f\"};\n  & > .color_container {\n    display: flex;\n    margin: 10px;\n  }\n`;\n\nconst Color = styled.div<{ color: string }>`\n  background-color: ${(props) => props.color};\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  margin-right: 7px;\n`;\n\nconst Weekend = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  color: #5e647b;\n  height: 40px;\n  & > div {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  border: solid 2px #f0f1f1;\n  border-bottom: solid 1px #f0f1f1;\n  border-right: none;\n`;\n\nexport default Calendar;\n","import { add, getDay, getDaysInMonth, sub } from \"date-fns\";\n\ntype Day = {\n  id: number;\n  date: Date;\n};\n\nexport const getDays = (today: Date) => {\n  let result: Array<Day> = [];\n\n  const start_date = getDay(new Date(today.getFullYear(), today.getMonth(), 1));\n  let prev_allDays = getDaysInMonth(sub(today, { months: 1 })) - start_date + 1; //화면에 보여줄 저번달의 첫날\n\n  for (let i = 0; i < start_date; i++) {\n    let prev = sub(today, { months: 1 });\n    let date = new Date(prev.getFullYear(), prev.getMonth(), prev_allDays);\n\n    let temp = {\n      id: date.getTime(),\n      date,\n    };\n    result.push(temp);\n    prev_allDays++;\n  }\n\n  for (let i = 1; i <= getDaysInMonth(today); i++) {\n    let date = new Date(today.getFullYear(), today.getMonth(), i);\n    let temp = {\n      id: date.getTime(),\n      date,\n    };\n    result.push(temp);\n  }\n\n  let next_month_count = 35 - result.length;\n  for (let i = 1; i <= next_month_count; i++) {\n    let next = add(today, { months: 1 });\n    let date = new Date(next.getFullYear(), next.getMonth(), i);\n    let temp = {\n      id: date.getTime(),\n      date,\n    };\n    result.push(temp);\n  }\n\n  if (result.length > 35) {\n    next_month_count = 42 - result.length;\n    for (let i = 1; i <= next_month_count; i++) {\n      let next = add(today, { months: 1 });\n      let date = new Date(next.getFullYear(), next.getMonth(), i);\n      let temp = {\n        id: date.getTime(),\n        date,\n      };\n      result.push(temp);\n    }\n  }\n\n  return result;\n};\n","const ONOFF = \"mocal/MODAL\" as const;\n\nexport const switchModal = () => ({ type: ONOFF });\n\nconst initialState = {\n  addModalOn: false,\n};\n\ntype ModalAction = ReturnType<typeof switchModal>;\n\nexport const modal = (state = initialState, action: ModalAction) => {\n  switch (action.type) {\n    case ONOFF:\n      return { addModalOn: !state.addModalOn };\n    default:\n      return state;\n  }\n};\n","import { TodoType } from \"./getTodos\";\n\nexport const addLocalStorage = (\n  id: string,\n  dateTime: number,\n  text: string,\n  deadline: string\n) => {\n  let todoStorage = localStorage.getItem(\"new_cemi\");\n  if (todoStorage === null || todoStorage === \"\") {\n    const item = [{ id, dateTime, text, deadline, done: false }];\n    localStorage.setItem(\"new_cemi\", JSON.stringify(item));\n  } else {\n    const item = { id, dateTime, text, deadline, done: false };\n    let current = JSON.parse(localStorage.getItem(\"new_cemi\") || \"\");\n    current.push(item);\n    localStorage.setItem(\"new_cemi\", JSON.stringify(current));\n  }\n};\n\nexport const toggleChange = (id: string) => {\n  const item = JSON.parse(localStorage.getItem(\"new_cemi\") || \"\");\n  let finalValue = item.map((value: TodoType) =>\n    value.id === id ? { ...value, done: !value.done } : value\n  );\n  localStorage.setItem(\"new_cemi\", JSON.stringify(finalValue));\n};\n\nexport const deleteLocalStorage = (id: string) => {\n  const item = JSON.parse(localStorage.getItem(\"new_cemi\") || \"\");\n  let finalValue = item.filter((value: TodoType) => value.id !== id);\n  localStorage.setItem(\"new_cemi\", JSON.stringify(finalValue));\n};\n","export type TodoType = {\n  id: string;\n  dateTime: number;\n  text: string;\n  deadline: string;\n  done: boolean;\n};\n\ntype TodoState = TodoType[];\n\nconst initialState: TodoState = [];\n\nexport const getTodos = () => {\n  if (localStorage.getItem(\"new_cemi\") === null) {\n    localStorage.setItem(\"new_cemi\", initialState.toString());\n    return initialState;\n  } else {\n    return JSON.parse(\n      localStorage.getItem(\"new_cemi\") || JSON.stringify(initialState)\n    );\n  }\n};\n","import { v4 as uuidv4 } from \"uuid\";\nimport {\n  addLocalStorage,\n  deleteLocalStorage,\n  toggleChange,\n} from \"../../static/setLocalStorage\";\nimport { getTodos, TodoType } from \"../../static/getTodos\";\n\nconst ADDTODO = \"todo/ADDTODO\" as const;\nconst DELTODO = \"todo/DELTODO\" as const;\nconst TOGGLETODO = \"todo/TOGGLETODO\" as const;\n\nexport const addTodo = (dateTime: number, text: string, deadline: string) => ({\n  type: ADDTODO,\n  dateTime: dateTime,\n  text: text,\n  deadline: deadline,\n});\n\nexport const delTodo = (id: string) => ({\n  type: DELTODO,\n  id: id,\n});\n\nexport const toggleTodo = (id: string) => ({\n  type: TOGGLETODO,\n  id: id,\n});\n\ntype TodoAction =\n  | ReturnType<typeof addTodo>\n  | ReturnType<typeof toggleTodo>\n  | ReturnType<typeof delTodo>;\n\nexport const todo = (state = getTodos(), action: TodoAction) => {\n  switch (action.type) {\n    case ADDTODO:\n      addLocalStorage(uuidv4(), action.dateTime, action.text, action.deadline);\n      return state.concat({\n        id: uuidv4(),\n        dateTime: action.dateTime,\n        text: action.text,\n        deadline: action.deadline,\n        done: false,\n      });\n    case DELTODO:\n      deleteLocalStorage(action.id);\n      return state.filter((item: TodoType) => item.id !== action.id);\n    case TOGGLETODO:\n      toggleChange(action.id);\n      return state.map((item: TodoType) =>\n        item.id === action.id ? { ...item, done: !item.done } : item\n      );\n    default:\n      return state;\n  }\n};\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { RootState } from \"../store/modules\";\nimport { switchModal } from \"../store/modules/modal\";\nimport { addTodo } from \"../store/modules/todo\";\n\nconst HOURS = [\n  \"12 AM\",\n  \"1 AM\",\n  \"2 AM\",\n  \"3 AM\",\n  \"4 AM\",\n  \"5 AM\",\n  \"6 AM\",\n  \"7 AM\",\n  \"8 AM\",\n  \"9 AM\",\n  \"10 AM\",\n  \"11 AM\",\n  \"12 PM\",\n  \"1 PM\",\n  \"2 PM\",\n  \"3 PM\",\n  \"4 PM\",\n  \"5 PM\",\n  \"6 PM\",\n  \"7 PM\",\n  \"8 PM\",\n  \"9 PM\",\n  \"10 PM\",\n  \"11 PM\",\n];\n\nconst Modal = () => {\n  const [deadLine, setDeadLine] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [deadLineValue, setDeadLineValue] = useState(\"\");\n\n  const selectedDate = useSelector(\n    (state: RootState) => state.calendar.selectedDate\n  );\n\n  const addDeadLine = () => {\n    setDeadLine(true);\n    setDeadLineValue(HOURS[0]);\n  };\n  const dispatch = useDispatch();\n  const showModal = () => {\n    dispatch(switchModal());\n  };\n\n  const onInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      target: { value },\n    } = event;\n    setInputValue(value);\n  };\n  const onSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const {\n      target: { value },\n    } = event;\n    setDeadLineValue(value);\n  };\n  const onSubmit = () => {\n    if (inputValue !== \"\") {\n      dispatch(addTodo(selectedDate.getTime(), inputValue, deadLineValue));\n    }\n    setInputValue(\"\");\n    setDeadLineValue(\"\");\n    dispatch(switchModal());\n  };\n\n  return (\n    <Container>\n      <Overlay onClick={showModal}></Overlay>\n      <Content>\n        <span className=\"exit\" onClick={showModal}>\n          X\n        </span>\n        <input\n          id=\"todo\"\n          type=\"text\"\n          placeholder=\"Enter your to do\"\n          onChange={onInputChange}\n          value={inputValue}\n        ></input>\n        {deadLine ? (\n          <select id=\"deadline\" value={deadLineValue} onChange={onSelectChange}>\n            {HOURS.map((hour, idx) => (\n              <option key={idx} value={hour}>\n                {hour}\n              </option>\n            ))}\n          </select>\n        ) : (\n          <DeadLine onClick={addDeadLine}>\n            <span>+</span>\n            <span>Add deadline</span>\n          </DeadLine>\n        )}\n        <Submit onClick={onSubmit}>Submit</Submit>\n      </Content>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Overlay = styled.div`\n  background-color: rgba(0, 0, 0, 0.6);\n  width: 100%;\n  height: 100%;\n  position: absolute;\n`;\n\nconst Content = styled.div`\n  width: 25%;\n  position: relative;\n  padding: 20px;\n  background-color: white;\n  text-align: center;\n  border-radius: 6px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2), 0 6px 6px rgba(0, 0, 0, 0.2);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  & > .exit {\n    margin-left: 90%;\n    cursor: pointer;\n  }\n  & > input {\n    border: none;\n    border-bottom: 2px solid lightgray;\n    width: 60%;\n    font-size: 15px;\n    outline: none;\n  }\n  & > select {\n    margin: 10px 0px;\n    border: none;\n    border-bottom: 2px solid lightgray;\n    outline: none;\n  }\n`;\n\nconst DeadLine = styled.div`\n  display: flex;\n  margin: 10px 0px;\n  font-size: 12px;\n  cursor: pointer;\n  & > span {\n    margin-right: 10px;\n  }\n`;\n\nconst Submit = styled.button`\n  border: none;\n  padding: 5px 20px;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport default Modal;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { delTodo, toggleTodo } from \"../store/modules/todo\";\n\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ntype TodoProps = {\n  id: string;\n  text: string;\n  deadline: string;\n  done: boolean;\n};\n\nconst Todo = ({ id, text, deadline, done }: TodoProps) => {\n  const dispatch = useDispatch();\n  const todoToggle = () => {\n    dispatch(toggleTodo(id));\n  };\n  const deleteTodo = () => {\n    dispatch(delTodo(id));\n  };\n  return (\n    <Container>\n      {done ? (\n        <div onClick={todoToggle}>\n          <Color color=\"#00af91\" />\n          <div>\n            <span className=\"done\">{text}</span>\n            <span className=\"done\">{deadline}</span>\n          </div>\n        </div>\n      ) : (\n        <div onClick={todoToggle}>\n          <Color color=\"#007965\" />\n          <div>\n            <span>{text}</span>\n            <span>{deadline}</span>\n          </div>\n        </div>\n      )}\n      <FontAwesomeIcon\n        icon={faTrash}\n        color=\"lightgray\"\n        size=\"sm\"\n        onClick={deleteTodo}\n      />\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 24px;\n  border-bottom: 2px solid #f0f1f1;\n  & > div {\n    display: flex;\n    flex-direction: row;\n    cursor: pointer;\n  }\n  & > div > div > .done {\n    font-style: italic;\n    text-decoration: line-through;\n    color: lightgray;\n  }\n`;\n\nconst Color = styled.span<{ color: string }>`\n  display: block;\n  background-color: ${(props) => props.color};\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  margin-right: 10px;\n  margin-top: 4px;\n`;\n\nexport default Todo;\n","import { getDay, getWeekOfMonth, isSameDay } from \"date-fns\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { TodoType } from \"../static/getTodos\";\nimport { RootState } from \"../store/modules\";\nimport { switchModal } from \"../store/modules/modal\";\nimport Todo from \"./Todo\";\n\nconst DAYS = [\n  \"Sunday\",\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thurseday\",\n  \"Friday\",\n  \"Saturday\",\n];\nconst WEEKS = [\"1st\", \"2nd\", \"3rd\", \"4th\", \"5th\"];\n\nconst TodoList = () => {\n  const dispatch = useDispatch();\n  const showModal = () => {\n    dispatch(switchModal());\n  };\n  const selectedDate = useSelector(\n    (state: RootState) => state.calendar.selectedDate\n  );\n  const todoState = useSelector(\n    (state: RootState) => state.todo\n  ).filter((item: TodoType) => isSameDay(item.dateTime, selectedDate));\n  return (\n    <Container>\n      <Title>\n        <Info>\n          <span className=\"day\">{DAYS[getDay(selectedDate)]}, </span>\n          <span className=\"week\">\n            {WEEKS[getWeekOfMonth(selectedDate) - 1]}\n          </span>\n        </Info>\n        <button className=\"add\" onClick={showModal}>\n          +\n        </button>\n      </Title>\n      <Content>\n        {todoState.map((todo: TodoType) => (\n          <Todo\n            key={todo.id}\n            id={todo.id}\n            text={todo.text}\n            deadline={todo.deadline}\n            done={todo.done}\n          ></Todo>\n        ))}\n      </Content>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  flex: 1;\n  height: 78vh;\n  border-left: solid 3px #f0f1f1;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  padding: 32px;\n  border-bottom: solid #f0f1f1 2px;\n  justify-content: space-between;\n  align-items: center;\n  & > .add {\n    background-color: white;\n    border-radius: 50%;\n    border: 2px solid #f0f1f1;\n    font-size: 20px;\n    color: gray;\n  }\n`;\n\nconst Info = styled.div`\n  display: flex;\n  align-items: flex-end;\n  & > .day {\n    font-size: 23px;\n  }\n  & > .week {\n    font-size: 18px;\n    margin-left: 10px;\n  }\n`;\n\nconst Content = styled.div`\n  overflow-y: scroll;\n`;\n\nexport default TodoList;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Calendar from \"../components/Calendar\";\nimport Modal from \"../components/Modal\";\nimport TodoList from \"../components/TodoList\";\nimport { RootState } from \"../store/modules\";\n\nconst Home = () => {\n  const addModalOn = useSelector((state: RootState) => state.modal.addModalOn);\n  return (\n    <Container>\n      <Calendar />\n      <TodoList />\n      {addModalOn && <Modal />}\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  background-color: white;\n  margin: 0px 100px;\n  border-radius: 40px 0px 40px 40px;\n  border: none;\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.1), 0 10px 10px rgba(0, 0, 0, 0.1);\n  overflow: auto;\n`;\nexport default Home;\n","import React from \"react\";\nimport Home from \"./routes/Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { calendar } from \"./calendar\";\nimport { modal } from \"./modal\";\nimport { todo } from \"./todo\";\n\nconst rootReducer = combineReducers({\n  calendar,\n  modal,\n  todo,\n});\n\nexport default rootReducer;\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { createStore } from \"@reduxjs/toolkit\";\nimport rootReducer from \"./modules\";\n\n// **** 리덕스 개발자도구 적용\nconst devTools =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__();\n\nconst store = createStore(rootReducer, devTools);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}