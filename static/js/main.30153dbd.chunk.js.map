{"version":3,"sources":["store/modules/calendar.ts","components/Calendar.tsx","static/getDays.ts","store/modules/modal.ts","store/modules/todo.ts","components/Modal.tsx","components/Todo.tsx","components/TodoList.tsx","routes/Home.tsx","App.tsx","store/modules/index.ts","store/index.ts","index.tsx"],"names":["PREV","TODAY","NEXT","CHANGE","initialState","selectedDate","Date","visibleDate","DAYS","Box","styled","div","Title","Button","Container","Day","props","selected","Weekend","Calendar","useSelector","state","calendar","dispatch","useDispatch","days","today","result","start_date","getDay","getFullYear","getMonth","prev_allDays","getDaysInMonth","sub","months","i","prev","date","temp","id","getTime","push","next_month_count","length","next","add","getDays","onDateClick","event","currentTarget","type","changeDate","parseInt","className","format","onClick","map","day","idx","item","toString","isSameDay","getDate","ONOFF","switchModal","addModalOn","ADDTODO","HOURS","Overlay","Content","DeadLine","Submit","button","Modal","useState","deadLine","setDeadLine","inputValue","setInputValue","deadLineValue","setDeadLineValue","showModal","placeholder","onChange","value","target","hour","dateTime","console","log","text","deadline","Color","span","Todo","WEEKS","Info","TodoList","todoState","todo","filter","getWeekOfMonth","Home","modal","App","rootReducer","combineReducers","action","concat","uuidv4","devTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30153dbd.chunk.js","sourcesContent":["import { add, sub } from \"date-fns\";\n\nconst PREV = \"calendar/PREV\" as const;\nconst TODAY = \"calendar/TODAY\" as const;\nconst NEXT = \"calendar/NEXT\" as const;\nconst CHANGE = \"calendar/CHANGE\" as const;\n\nexport const prevMonth = () => ({ type: PREV });\nexport const thisMonth = () => ({ type: TODAY });\nexport const nextMonth = () => ({ type: NEXT });\nexport const changeDate = (id: number) => ({ type: CHANGE, id: id });\n\ntype CalendarAction =\n  | ReturnType<typeof prevMonth>\n  | ReturnType<typeof thisMonth>\n  | ReturnType<typeof nextMonth>\n  | ReturnType<typeof changeDate>;\n\nconst initialState = {\n  selectedDate: new Date(),\n  visibleDate: new Date(),\n};\n\nexport const calendar = (state = initialState, action: CalendarAction) => {\n  switch (action.type) {\n    case PREV:\n      console.log(\"action prev\");\n      return { ...state, visibleDate: sub(state.visibleDate, { months: 1 }) };\n    case TODAY:\n      console.log(\"today\");\n      return { visibleDate: new Date(), selectedDate: new Date() };\n    case NEXT:\n      console.log(\"action next\");\n      return { ...state, visibleDate: add(state.visibleDate, { months: 1 }) };\n    case CHANGE:\n      console.log(\"change state\");\n      return {\n        visibleDate: new Date(action.id),\n        selectedDate: new Date(action.id),\n      };\n    default:\n      return state;\n  }\n};\n","import { isSameDay } from \"date-fns\";\nimport format from \"date-fns/format\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { RootState } from \"../store/modules\";\nimport {\n  nextMonth,\n  thisMonth,\n  prevMonth,\n  changeDate,\n} from \"../store/modules/calendar\";\nimport { getDays } from \"../static/getDays\";\n\nconst DAYS = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\nconst Calendar = () => {\n  const selectedDate = useSelector(\n    (state: RootState) => state.calendar.selectedDate\n  );\n  const visibleDate = useSelector(\n    (state: RootState) => state.calendar.visibleDate\n  );\n  const dispatch = useDispatch();\n  const goPrevMonth = () => {\n    dispatch(prevMonth());\n  };\n  const goToday = () => {\n    dispatch(thisMonth());\n  };\n  const goNextMonth = () => {\n    dispatch(nextMonth());\n  };\n  const days = getDays(visibleDate);\n\n  const onDateClick = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    const {\n      currentTarget: { id },\n    } = event;\n    dispatch(changeDate(parseInt(id)));\n  };\n\n  return (\n    <Box>\n      <Title>\n        <div className=\"title\">{format(visibleDate, \"MMMM, yyyy\")}</div>\n        <Button>\n          <button onClick={goPrevMonth}>{\"<\"}</button>\n          <button onClick={goToday}>{\"today\"}</button>\n          <button onClick={goNextMonth}>{\">\"}</button>\n        </Button>\n      </Title>\n      <Weekend>\n        {DAYS.map((day, idx) => (\n          <div key={idx}>{day}</div>\n        ))}\n      </Weekend>\n      <div>\n        <Container>\n          {days.map((item) => (\n            <Day\n              key={item.id}\n              id={item.id.toString()}\n              onClick={onDateClick}\n              selected={isSameDay(selectedDate, item.date)}\n            >\n              {item.date.getDate()}\n            </Day>\n          ))}\n        </Container>\n      </div>\n    </Box>\n  );\n};\n\nconst Box = styled.div`\n  flex: 3;\n  text-align: center;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  text-align: left;\n  padding: 32px;\n  & > .title {\n    font-size: 23px;\n    font-family: \"Bold\";\n    color: #f2702f;\n  }\n`;\nconst Button = styled.div`\n  button {\n    border-radius: 50px;\n    border: none;\n    margin-right: 5px;\n  }\n`;\n\nconst Container = styled.div`\n  display: grid;\n  height: 500px;\n  grid-template-columns: repeat(7, 1fr);\n  grid-auto-rows: minmax(100px, auto);\n  border-left: solid 1px #f0f1f1;\n  border-bottom: solid 2px #f0f1f1;\n`;\n\nconst Day = styled.div<{ selected: boolean }>`\n  border: solid 1px #f0f1f1;\n  padding-top: 5px;\n  &:nth-child(7n) {\n    border-right: none;\n  }\n  color: ${(props) => props.selected && \"#f2702f\"};\n`;\n\nconst Weekend = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  color: #5e647b;\n  height: 40px;\n  & > div {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  border: solid 2px #f0f1f1;\n  border-bottom: solid 1px #f0f1f1;\n  border-right: none;\n`;\n\nexport default Calendar;\n","import { add, getDay, getDaysInMonth, sub } from \"date-fns\";\n\ntype Day = {\n  id: number;\n  date: Date;\n};\n\nexport const getDays = (today: Date) => {\n  let result: Array<Day> = [];\n\n  const start_date = getDay(new Date(today.getFullYear(), today.getMonth(), 1));\n  let prev_allDays = getDaysInMonth(sub(today, { months: 1 })) - start_date + 1; //화면에 보여줄 저번달의 첫날\n\n  for (let i = 0; i < start_date; i++) {\n    let prev = sub(today, { months: 1 });\n    let date = new Date(prev.getFullYear(), prev.getMonth(), prev_allDays);\n\n    let temp = {\n      id: date.getTime(),\n      date,\n    };\n    result.push(temp);\n    prev_allDays++;\n  }\n\n  for (let i = 1; i <= getDaysInMonth(today); i++) {\n    let date = new Date(today.getFullYear(), today.getMonth(), i);\n    let temp = {\n      id: date.getTime(),\n      date,\n    };\n    result.push(temp);\n  }\n\n  let next_month_count = 35 - result.length;\n  for (let i = 1; i <= next_month_count; i++) {\n    let next = add(today, { months: 1 });\n    let date = new Date(next.getFullYear(), next.getMonth(), i);\n    let temp = {\n      id: date.getTime(),\n      date,\n    };\n    result.push(temp);\n  }\n\n  if (result.length > 35) {\n    next_month_count = 42 - result.length;\n    for (let i = 1; i <= next_month_count; i++) {\n      let next = add(today, { months: 1 });\n      let date = new Date(next.getFullYear(), next.getMonth(), i);\n      let temp = {\n        id: date.getTime(),\n        date,\n      };\n      result.push(temp);\n    }\n  }\n\n  return result;\n};\n","const ONOFF = \"mocal/MODAL\" as const;\n\nexport const switchModal = () => ({ type: ONOFF });\n\nconst initialState = {\n  addModalOn: false,\n};\n\ntype ModalAction = ReturnType<typeof switchModal>;\n\nexport const modal = (state = initialState, action: ModalAction) => {\n  switch (action.type) {\n    case ONOFF:\n      console.log(\"switching modal\");\n      return { addModalOn: !state.addModalOn };\n    default:\n      return state;\n  }\n};\n","import { v4 as uuidv4 } from \"uuid\";\nconst ADDTODO = \"todo/ADDTODO\" as const;\n\nexport const addTodo = (dateTime: number, text: string, deadline: string) => ({\n  type: ADDTODO,\n  dateTime: dateTime,\n  text: text,\n  deadline: deadline,\n});\n\ntype TodoAction = ReturnType<typeof addTodo>;\n\ntype Todo = {\n  id: string;\n  dateTime: number;\n  text: string;\n  deadline: string;\n};\n\ntype TodoState = Todo[];\n\nconst initialState: TodoState = [];\n\nexport const todo = (state = initialState, action: TodoAction) => {\n  switch (action.type) {\n    case ADDTODO:\n      console.log(\"add Todo\");\n      return state.concat({\n        id: uuidv4(),\n        dateTime: action.dateTime,\n        text: action.text,\n        deadline: action.deadline,\n      });\n    default:\n      return state;\n  }\n};\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { RootState } from \"../store/modules\";\nimport { switchModal } from \"../store/modules/modal\";\nimport { addTodo } from \"../store/modules/todo\";\n\nconst HOURS = [\n  \"12 AM\",\n  \"1 AM\",\n  \"2 AM\",\n  \"3 AM\",\n  \"4 AM\",\n  \"5 AM\",\n  \"6 AM\",\n  \"7 AM\",\n  \"8 AM\",\n  \"9 AM\",\n  \"10 AM\",\n  \"11 AM\",\n  \"12 PM\",\n  \"1 PM\",\n  \"2 PM\",\n  \"3 PM\",\n  \"4 PM\",\n  \"5 PM\",\n  \"6 PM\",\n  \"7 PM\",\n  \"8 PM\",\n  \"9 PM\",\n  \"10 PM\",\n  \"11 PM\",\n];\n\nconst Modal = () => {\n  const [deadLine, setDeadLine] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [deadLineValue, setDeadLineValue] = useState(\"\");\n\n  const selectedDate = useSelector(\n    (state: RootState) => state.calendar.selectedDate\n  );\n  const addDeadLine = () => {\n    setDeadLine(true);\n    setDeadLineValue(HOURS[0]);\n  };\n  const dispatch = useDispatch();\n  const showModal = () => {\n    dispatch(switchModal());\n  };\n\n  const onInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      target: { value },\n    } = event;\n    setInputValue(value);\n  };\n  const onSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const {\n      target: { value },\n    } = event;\n    setDeadLineValue(value);\n  };\n  const onSubmit = () => {\n    console.log(deadLineValue);\n    if (inputValue !== \"\") {\n      dispatch(addTodo(selectedDate.getTime(), inputValue, deadLineValue));\n    }\n    setInputValue(\"\");\n    setDeadLineValue(\"\");\n    dispatch(switchModal());\n  };\n\n  return (\n    <Container>\n      <Overlay onClick={showModal}></Overlay>\n      <Content>\n        <span className=\"exit\" onClick={showModal}>\n          X\n        </span>\n        <input\n          id=\"todo\"\n          type=\"text\"\n          placeholder=\"Enter your to do\"\n          onChange={onInputChange}\n          value={inputValue}\n        ></input>\n        {deadLine ? (\n          <select id=\"deadline\" value={deadLineValue} onChange={onSelectChange}>\n            {HOURS.map((hour, idx) => (\n              <option key={idx} value={hour}>\n                {hour}\n              </option>\n            ))}\n          </select>\n        ) : (\n          <DeadLine onClick={addDeadLine}>\n            <span>+</span>\n            <span>Add deadline</span>\n          </DeadLine>\n        )}\n        <Submit onClick={onSubmit}>Submit</Submit>\n      </Content>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Overlay = styled.div`\n  background-color: rgba(0, 0, 0, 0.6);\n  width: 100%;\n  height: 100%;\n  position: absolute;\n`;\n\nconst Content = styled.div`\n  width: 25%;\n  position: relative;\n  padding: 20px;\n  background-color: white;\n  text-align: center;\n  border-radius: 6px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2), 0 6px 6px rgba(0, 0, 0, 0.2);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  & > .exit {\n    margin-left: 90%;\n    cursor: pointer;\n  }\n  & > input {\n    border: none;\n    border-bottom: 2px solid lightgray;\n    width: 60%;\n    font-size: 15px;\n    outline: none;\n  }\n  & > select {\n    margin: 10px 0px;\n    border: none;\n    border-bottom: 2px solid lightgray;\n    outline: none;\n  }\n`;\n\nconst DeadLine = styled.div`\n  display: flex;\n  margin: 10px 0px;\n  font-size: 12px;\n  cursor: pointer;\n  & > span {\n    margin-right: 10px;\n  }\n`;\n\nconst Submit = styled.button`\n  border: none;\n  padding: 5px 20px;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport default Modal;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ntype TodoProps = {\n  text: string;\n  deadline: string;\n};\n\nconst Todo = ({ text, deadline }: TodoProps) => {\n  return (\n    <Container>\n      <Color />\n      <div>\n        <span>{text}</span>\n        <span>{deadline}</span>\n      </div>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding: 24px;\n  border-bottom: 2px solid #f0f1f1;\n  & > div {\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nconst Color = styled.span`\n  display: block;\n  background-color: red;\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  margin-right: 10px;\n  margin-top: 4px;\n`;\n\nexport default Todo;\n","import { getDay, getWeekOfMonth, isSameDay } from \"date-fns\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { RootState } from \"../store/modules\";\nimport { switchModal } from \"../store/modules/modal\";\nimport Todo from \"./Todo\";\n\nconst DAYS = [\n  \"Sunday\",\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thurseday\",\n  \"Friday\",\n  \"Saturday\",\n];\nconst WEEKS = [\"1st\", \"2nd\", \"3rd\", \"4th\", \"5th\"];\n\nconst TodoList = () => {\n  const dispatch = useDispatch();\n  const showModal = () => {\n    dispatch(switchModal());\n  };\n  const selectedDate = useSelector(\n    (state: RootState) => state.calendar.selectedDate\n  );\n  const todoState = useSelector(\n    (state: RootState) => state.todo\n  ).filter((item) => isSameDay(item.dateTime, selectedDate));\n  return (\n    <Container>\n      <Title>\n        <Info>\n          <span className=\"day\">{DAYS[getDay(selectedDate)]}, </span>\n          <span className=\"week\">\n            {WEEKS[getWeekOfMonth(selectedDate) - 1]}\n          </span>\n        </Info>\n        <button className=\"add\" onClick={showModal}>\n          +\n        </button>\n      </Title>\n      <Content>\n        {todoState.map((todo) => (\n          <Todo key={todo.id} text={todo.text} deadline={todo.deadline}></Todo>\n        ))}\n      </Content>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  flex: 1;\n  height: 100vh;\n  border-left: solid 3px #f0f1f1;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  padding: 32px;\n  border-bottom: solid #f0f1f1 2px;\n  justify-content: space-between;\n  align-items: center;\n  & > .add {\n    background-color: white;\n    border-radius: 50%;\n    border: 2px solid #f0f1f1;\n    font-size: 20px;\n    color: gray;\n  }\n`;\n\nconst Info = styled.div`\n  display: flex;\n  align-items: flex-end;\n  & > .day {\n    font-size: 23px;\n  }\n  & > .week {\n    font-size: 18px;\n    margin-left: 10px;\n  }\n`;\n\nconst Content = styled.div`\n  height: 100%;\n  overflow-y: scroll;\n`;\n\nexport default TodoList;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Calendar from \"../components/Calendar\";\nimport Modal from \"../components/Modal\";\nimport TodoList from \"../components/TodoList\";\nimport { RootState } from \"../store/modules\";\n\nconst Home = () => {\n  const addModalOn = useSelector((state: RootState) => state.modal.addModalOn);\n  return (\n    <Container>\n      <Calendar />\n      <TodoList />\n      {addModalOn && <Modal />}\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n`;\nexport default Home;\n","import React from \"react\";\nimport Home from \"./routes/Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { calendar } from \"./calendar\";\nimport { modal } from \"./modal\";\nimport { todo } from \"./todo\";\n\nconst rootReducer = combineReducers({\n  calendar,\n  modal,\n  todo,\n});\n\nexport default rootReducer;\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { createStore } from \"@reduxjs/toolkit\";\nimport rootReducer from \"./modules\";\n\n// **** 리덕스 개발자도구 적용\nconst devTools =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__();\n\nconst store = createStore(rootReducer, devTools);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}