{"version":3,"sources":["store/modules/calendar.ts","components/Calendar.tsx","store/modules/getDays.ts","store/modules/modal.ts","components/Modal.tsx","components/TodoList.tsx","routes/Home.tsx","App.tsx","store/modules/index.ts","store/index.ts","index.tsx"],"names":["PREV","TODAY","NEXT","CHANGE","initialState","selectedDate","Date","DAYS","Box","styled","div","Title","Button","Container","Weekend","Calendar","useSelector","state","calendar","dispatch","useDispatch","days","today","result","start_date","getDay","getFullYear","getMonth","prev_allDays","getDaysInMonth","sub","months","i","prev","date","temp","id","getTime","push","next_month_count","length","next","add","getDays","onDateClick","event","target","current","document","getElementById","toString","className","type","changeDate","parseInt","select","format","onClick","map","day","idx","item","getDate","ONOFF","switchModal","addModalOn","Overlay","Content","DeadLine","Submit","button","Modal","useState","deadLine","setDeadLine","showModal","placeholder","hour","value","Info","TodoList","Home","modal","App","rootReducer","combineReducers","action","console","log","devTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","ReactDOM","render"],"mappings":"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","file":"static/js/main.f71f5abf.chunk.js","sourcesContent":["import { add, sub } from \"date-fns\";\n\nconst PREV = \"calendar/PREV\" as const;\nconst TODAY = \"calendar/TODAY\" as const;\nconst NEXT = \"calendar/NEXT\" as const;\nconst CHANGE = \"calendar/CHANGE\" as const;\n\nexport const prevMonth = () => ({ type: PREV });\nexport const thisMonth = () => ({ type: TODAY });\nexport const nextMonth = () => ({ type: NEXT });\nexport const changeDate = (id: number) => ({ type: CHANGE, id: id });\n\ntype CalendarAction =\n  | ReturnType<typeof prevMonth>\n  | ReturnType<typeof thisMonth>\n  | ReturnType<typeof nextMonth>\n  | ReturnType<typeof changeDate>;\n\nconst initialState = {\n  selectedDate: new Date(),\n};\n\nexport const calendar = (state = initialState, action: CalendarAction) => {\n  switch (action.type) {\n    case PREV:\n      console.log(\"action prev\");\n      return { selectedDate: sub(state.selectedDate, { months: 1 }) };\n    case TODAY:\n      console.log(\"today\");\n      return { selectedDate: new Date() };\n    case NEXT:\n      console.log(\"action next\");\n      return { selectedDate: add(state.selectedDate, { months: 1 }) };\n    case CHANGE:\n      console.log(\"change state\");\n      return { selectedDate: new Date(action.id) };\n    default:\n      return state;\n  }\n};\n","import format from \"date-fns/format\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { RootState } from \"../store/modules\";\nimport {\n  nextMonth,\n  thisMonth,\n  prevMonth,\n  changeDate,\n} from \"../store/modules/calendar\";\nimport { getDays } from \"../store/modules/getDays\";\n\nconst DAYS = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\nconst Calendar = () => {\n  const selectedDate = useSelector(\n    (state: RootState) => state.calendar.selectedDate\n  );\n  const dispatch = useDispatch();\n  const goPrevMonth = () => {\n    dispatch(prevMonth());\n  };\n  const goToday = () => {\n    dispatch(thisMonth());\n  };\n  const goNextMonth = () => {\n    dispatch(nextMonth());\n  };\n  const days: Array<any> = getDays(selectedDate);\n\n  const onDateClick = (event: any) => {\n    let {\n      target: { id },\n    } = event;\n    let current = document.getElementById(selectedDate.getTime().toString());\n    if (current) {\n      current.className = \"item\";\n    }\n    dispatch(changeDate(parseInt(id)));\n    let select = document.getElementById(id);\n    if (select) {\n      select.className = \"item select\";\n    }\n  };\n\n  return (\n    <Box>\n      <Title>\n        <div className=\"title\">{format(selectedDate, \"MMMM, yyyy\")}</div>\n        <Button>\n          <button onClick={goPrevMonth}>{\"<\"}</button>\n          <button onClick={goToday}>{\"today\"}</button>\n          <button onClick={goNextMonth}>{\">\"}</button>\n        </Button>\n      </Title>\n      <Weekend>\n        {DAYS.map((day, idx) => (\n          <div key={idx}>{day}</div>\n        ))}\n      </Weekend>\n      <div>\n        <Container>\n          {days.map((item) => (\n            <div\n              className=\"item\"\n              key={item.id}\n              id={item.id}\n              onClick={onDateClick}\n            >\n              {item.date.getDate()}\n            </div>\n          ))}\n        </Container>\n      </div>\n    </Box>\n  );\n};\n\nconst Box = styled.div`\n  flex: 3;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  text-align: left;\n  padding: 32px;\n  & > .title {\n    font-size: 23px;\n    font-family: \"Bold\";\n    color: #f2702f;\n  }\n`;\nconst Button = styled.div`\n  button {\n    border-radius: 50px;\n    border: none;\n    margin-right: 5px;\n  }\n`;\n\nconst Container = styled.div`\n  display: grid;\n  height: 500px;\n  grid-template-columns: repeat(7, 1fr);\n  grid-auto-rows: minmax(100px, auto);\n  border-left: solid 1px #f0f1f1;\n  border-bottom: solid 2px #f0f1f1;\n  & > .item {\n    border: solid 1px #f0f1f1;\n    padding-top: 5px;\n  }\n  & > .item:nth-child(7n) {\n    border-right: none;\n  }\n  & > .select {\n    color: #f2702f;\n  }\n`;\n\nconst Weekend = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  color: #5e647b;\n  height: 40px;\n  & > div {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  border: solid 2px #f0f1f1;\n  border-bottom: solid 1px #f0f1f1;\n  border-right: none;\n`;\n\nexport default Calendar;\n","import { add, getDay, getDaysInMonth, sub } from \"date-fns\";\n\nexport const getDays = (today: Date) => {\n  let result: Array<Object> = [];\n\n  const start_date = getDay(new Date(today.getFullYear(), today.getMonth(), 1));\n  let prev_allDays = getDaysInMonth(sub(today, { months: 1 })) - start_date + 1; //화면에 보여줄 저번달의 첫날\n\n  for (let i = 0; i < start_date; i++) {\n    let prev = sub(today, { months: 1 });\n    let date = new Date(prev.getFullYear(), prev.getMonth(), prev_allDays);\n\n    let temp = {\n      id: date.getTime(),\n      date,\n    };\n    result.push(temp);\n    prev_allDays++;\n  }\n\n  for (let i = 1; i <= getDaysInMonth(today); i++) {\n    let date = new Date(today.getFullYear(), today.getMonth(), i);\n    let temp = {\n      id: date.getTime(),\n      date,\n    };\n    result.push(temp);\n  }\n\n  let next_month_count = 35 - result.length;\n  for (let i = 1; i <= next_month_count; i++) {\n    let next = add(today, { months: 1 });\n    let date = new Date(next.getFullYear(), next.getMonth(), i);\n    let temp = {\n      id: date.getTime(),\n      date,\n    };\n    result.push(temp);\n  }\n\n  if (result.length > 35) {\n    next_month_count = 42 - result.length;\n    for (let i = 1; i <= next_month_count; i++) {\n      let next = add(today, { months: 1 });\n      let date = new Date(next.getFullYear(), next.getMonth(), i);\n      let temp = {\n        id: date.getTime(),\n        date,\n      };\n      result.push(temp);\n    }\n  }\n\n  return result;\n};\n","const ONOFF = \"mocal/MODAL\" as const;\n\nexport const switchModal = () => ({ type: ONOFF });\n\nconst initialState = {\n  addModalOn: false,\n};\n\ntype ModalAction = ReturnType<typeof switchModal>;\n\nexport const modal = (state = initialState, action: ModalAction) => {\n  switch (action.type) {\n    case ONOFF:\n      console.log(\"switching modal\");\n      return { addModalOn: !state.addModalOn };\n    default:\n      return state;\n  }\n};\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { switchModal } from \"../store/modules/modal\";\n\nconst Modal = () => {\n  const [deadLine, setDeadLine] = useState(false);\n  const addDeadLine = () => {\n    setDeadLine(true);\n  };\n  const dispatch = useDispatch();\n  const showModal = () => {\n    dispatch(switchModal());\n  };\n  const hours = [\n    \"12 AM\",\n    \"1 AM\",\n    \"2 AM\",\n    \"3 AM\",\n    \"4 AM\",\n    \"5 AM\",\n    \"6 AM\",\n    \"7 AM\",\n    \"8 AM\",\n    \"9 AM\",\n    \"10 AM\",\n    \"11 AM\",\n    \"12 PM\",\n    \"1 PM\",\n    \"2 PM\",\n    \"3 PM\",\n    \"4 PM\",\n    \"5 PM\",\n    \"6 PM\",\n    \"7 PM\",\n    \"8 PM\",\n    \"9 PM\",\n    \"10 PM\",\n    \"11 PM\",\n  ];\n  return (\n    <Container>\n      <Overlay onClick={showModal}></Overlay>\n      <Content>\n        <span className=\"exit\" onClick={showModal}>\n          X\n        </span>\n        <input type=\"text\" placeholder=\"Enter your to do\"></input>\n        {deadLine ? (\n          <select>\n            {hours.map((hour) => (\n              <option value={hour}>{hour}</option>\n            ))}\n          </select>\n        ) : (\n          <DeadLine onClick={addDeadLine}>\n            <span>+</span>\n            <span>Add deadline</span>\n          </DeadLine>\n        )}\n        <Submit>Submit</Submit>\n      </Content>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Overlay = styled.div`\n  background-color: rgba(0, 0, 0, 0.6);\n  width: 100%;\n  height: 100%;\n  position: absolute;\n`;\n\nconst Content = styled.div`\n  width: 25%;\n  position: relative;\n  padding: 20px;\n  background-color: white;\n  text-align: center;\n  border-radius: 6px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2), 0 6px 6px rgba(0, 0, 0, 0.2);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  & > .exit {\n    margin-left: 90%;\n    cursor: pointer;\n  }\n  & > input {\n    border: none;\n    border-bottom: 2px solid lightgray;\n    width: 60%;\n    font-size: 15px;\n    outline: none;\n  }\n  & > select {\n    margin: 10px 0px;\n    border: none;\n    border-bottom: 2px solid lightgray;\n    outline: none;\n  }\n`;\n\nconst DeadLine = styled.div`\n  display: flex;\n  margin: 10px 0px;\n  font-size: 12px;\n  cursor: pointer;\n  & > span {\n    margin-right: 10px;\n  }\n`;\n\nconst Submit = styled.button`\n  border: none;\n  padding: 5px 20px;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport default Modal;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { switchModal } from \"../store/modules/modal\";\n\nconst TodoList = () => {\n  const dispatch = useDispatch();\n  const showModal = () => {\n    dispatch(switchModal());\n  };\n  return (\n    <Container>\n      <Title>\n        <Info>\n          <span className=\"day\">Friday, </span>\n          <span className=\"week\"> 4th</span>\n        </Info>\n        <button className=\"add\" onClick={showModal}>\n          +\n        </button>\n      </Title>\n      <Button></Button>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  flex: 1;\n  height: 100vh;\n  border-left: solid 3px #f0f1f1;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  padding: 32px;\n  border-bottom: solid #f0f1f1 2px;\n  justify-content: space-between;\n  align-items: center;\n  & > .add {\n    background-color: white;\n    border-radius: 50%;\n    border: 2px solid #f0f1f1;\n    font-size: 20px;\n    color: gray;\n  }\n`;\n\nconst Info = styled.div`\n  display: flex;\n  align-items: flex-end;\n  & > .day {\n    font-size: 23px;\n  }\n  & > .week {\n    font-size: 18px;\n    margin-left: 10px;\n  }\n`;\n\nconst Button = styled.div``;\n\nexport default TodoList;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Calendar from \"../components/Calendar\";\nimport Modal from \"../components/Modal\";\nimport TodoList from \"../components/TodoList\";\nimport { RootState } from \"../store/modules\";\n\nconst Home = () => {\n  const addModalOn = useSelector((state: RootState) => state.modal.addModalOn);\n  return (\n    <Container>\n      <Calendar />\n      <TodoList />\n      {addModalOn && <Modal />}\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n`;\nexport default Home;\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./routes/Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { calendar } from \"./calendar\";\nimport { modal } from \"./modal\";\n\nconst rootReducer = combineReducers({\n  calendar,\n  modal,\n});\n\nexport default rootReducer;\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { createStore } from \"@reduxjs/toolkit\";\nimport rootReducer from \"./modules\";\n\n// **** 리덕스 개발자도구 적용\nconst devTools =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__();\n\nconst store = createStore(rootReducer, devTools);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}